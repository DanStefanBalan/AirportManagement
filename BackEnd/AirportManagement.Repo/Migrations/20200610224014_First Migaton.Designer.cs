// <auto-generated />
using System;
using AirportManagement.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportManagement.Repo.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200610224014_First Migaton")]
    partial class FirstMigaton
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirportManagement.Data.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AirportManagement.Data.Aircraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AircraftNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfRegistration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfFlightAttendants")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPilots")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId")
                        .IsUnique()
                        .HasFilter("[FlightId] IS NOT NULL");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("AirportManagement.Data.Airport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("AirportManagement.Data.Destination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FlightDestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LocalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Weather")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.HasIndex("FlightDestinationId")
                        .IsUnique()
                        .HasFilter("[FlightDestinationId] IS NOT NULL");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("AirportManagement.Data.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Airline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ArrivalTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EstimationTime")
                        .HasColumnType("time");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("FlightTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirportManagement.Data.Terminal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GateNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.HasIndex("DestinationId")
                        .IsUnique()
                        .HasFilter("[DestinationId] IS NOT NULL");

                    b.ToTable("Terminals");
                });

            modelBuilder.Entity("AirportManagement.Data.Aircraft", b =>
                {
                    b.HasOne("AirportManagement.Data.Flight", "Flight")
                        .WithOne("Aircraft")
                        .HasForeignKey("AirportManagement.Data.Aircraft", "FlightId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AirportManagement.Data.Destination", b =>
                {
                    b.HasOne("AirportManagement.Data.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId");

                    b.HasOne("AirportManagement.Data.Flight", "Flight")
                        .WithOne("Destination")
                        .HasForeignKey("AirportManagement.Data.Destination", "FlightDestinationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AirportManagement.Data.Flight", b =>
                {
                    b.HasOne("AirportManagement.Data.Airport", "Airport")
                        .WithMany("Flights")
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AirportManagement.Data.Terminal", b =>
                {
                    b.HasOne("AirportManagement.Data.Airport", "Airport")
                        .WithMany("Terminals")
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AirportManagement.Data.Destination", "Destination")
                        .WithOne("Terminal")
                        .HasForeignKey("AirportManagement.Data.Terminal", "DestinationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AirportManagement.Data.Flight", "Flight")
                        .WithOne("Terminal")
                        .HasForeignKey("AirportManagement.Data.Terminal", "DestinationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
